"""

Revision ID: 50301ffac253
Revises: 
Create Date: 2023-05-11 21:30:21.235146

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '50301ffac253'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(length=32), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('user_role', sa.String(length=12), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email'),
    comment='User`s data'
    )
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('flower_lot',
    sa.Column('lot_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('saller_id', sa.UUID(), nullable=True),
    sa.Column('flower_name', sa.String(), nullable=False),
    sa.Column('flower_color', sa.String(), nullable=False),
    sa.Column('is_displayed', sa.Boolean(), nullable=False),
    sa.Column('flowers_amount', sa.Integer(), nullable=False),
    sa.Column('price_for_one', sa.DECIMAL(precision=12, scale=2), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['saller_id'], ['user.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('lot_id'),
    sa.UniqueConstraint('lot_id')
    )
    op.create_index(op.f('ix_flower_lot_flower_name'), 'flower_lot', ['flower_name'], unique=False)
    op.create_table('saller_comment',
    sa.Column('comment_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('rating', sa.INTEGER(), nullable=True),
    sa.Column('saller_id', sa.UUID(), nullable=True, comment='the number of the seller to whom the review is written'),
    sa.Column('reviewer_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['reviewer_id'], ['user.user_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['saller_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('comment_id'),
    sa.UniqueConstraint('comment_id')
    )
    op.create_table('lot_comment',
    sa.Column('comment_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('rating', sa.INTEGER(), nullable=True),
    sa.Column('lot_id', sa.Integer(), nullable=True, comment='the number of the lot to whom the review is written'),
    sa.Column('reviewer_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['lot_id'], ['flower_lot.lot_id'], ),
    sa.ForeignKeyConstraint(['reviewer_id'], ['user.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('comment_id'),
    sa.UniqueConstraint('comment_id')
    )
    op.create_table('order',
    sa.Column('order_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('lot_id', sa.Integer(), nullable=True),
    sa.Column('saller_id', sa.UUID(), nullable=True),
    sa.Column('customer', sa.UUID(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('full_price', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['customer'], ['user.user_id'], ),
    sa.ForeignKeyConstraint(['lot_id'], ['flower_lot.lot_id'], ),
    sa.ForeignKeyConstraint(['saller_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('order_id'),
    sa.UniqueConstraint('order_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('order')
    op.drop_table('lot_comment')
    op.drop_table('saller_comment')
    op.drop_index(op.f('ix_flower_lot_flower_name'), table_name='flower_lot')
    op.drop_table('flower_lot')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_table('user')
    # ### end Alembic commands ###
